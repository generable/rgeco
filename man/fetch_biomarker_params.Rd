% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inference_api.R
\name{fetch_biomarker_params}
\alias{fetch_biomarker_params}
\title{Fetch biomarker sub-model parameters (f, kg, ks)}
\usage{
fetch_biomarker_params(
  run_id,
  level = c("subject", "trial_arm", "overall"),
  return = c("median", "quantiles", "intervals", "draws"),
  type = c("posterior", "prior"),
  project = NULL,
  project_version_id = NULL
)
}
\arguments{
\item{run_id}{[required] One or several model run_ids. See \code{\link{find_runs}} for a list of runs available.}

\item{level}{The level at which to return predicted values. One of: subject, trial_arm, or overall. Default value is per subject.}

\item{return}{The type of summary to return. One of: median, quantiles, intervals, or draws. Default: median}

\item{type}{Whether to return posterior or prior predictions. Default: posterior}

\item{project}{The name of the project to which the run_id belongs.}

\item{project_version_id}{The specific project_version_id to which the run_id belongs. Defaults to the most recent project_version_id if none provided.}
}
\value{
A data.frame in tidy format, with one record per parameter, run_id, and summarized level. See notes for specific details about each return type.
}
\description{
Fetch inferences for biomarker sub-model parameters from a specific model fit
}
\details{
Inferences from the biomarker sub-model can be provided at different levels of the hierarchical model:
\enumerate{
  \item Per subject
  \item Per trial_arm
  \item Overall
}

Use the \code{level} argument to select the desired level at which to summarize predicted values.

Authentication (see \code{\link{login}}) is required prior to using this function. This
function accesses information from the Generable API.

There are four slightly different return formats, depending on the \code{return} argument provided. See notes for details.
}
\section{Return format}{

The columns returned depends on the value of the `return` argument. The default is to return median values for each \code{level} and parameter (\code{.variable}).

All return formats share a set of columns containing meta-information about the predicted quantities:
\enumerate{
  \item \code{.variable} Text label for the predicted quantity or variable. In this case, there will be three values: "kg", "ks", and "f"
  \item \code{run_id} Text field containing the run_id from which each returned value was generated.
  \item \code{.type} Text field containing the type (prior or posterior) of predicted quantity or inferences summarized.
  \item \code{.level} Text field containing the level (subject, trial_arm, or overall) at which the predicted values were prepared.
  \item \code{subject_id | trial_arm_id } If returning predicted values at the subject, study, or trial-arm level, the ids corresponding to the subjects or trial-arms used in the prediction.
}

In addition, there will be a few columns to provide and describe the predicted quantities.
The set of columns included here will depend on the `return` argument:
\enumerate{
  \item if \code{return  == 'median'}, a pair of columns: \code{.value} and \code{.point}
  \item if \code{return == 'quantiles'}, a pair of columns: \code{.value} and \code{quantile}
  \item if \code{return == 'intervals'}, a set of columns: \code{.value}, \code{.width}, \code{.lower}, and \code{.upper} containing the median estimate (.value) along with the lower (.lower) and upper (.upper) bounds for the 50, 80, and 90 percent credible intervals (.width).
     \itemize{
       \item In addition, columns \code{.point} and \code{.interval} describe the type of point estimate ('median') and interval ('qi')
       \item This data structure mimics that returned by \code{\link[tidybayes:median_qi]{median_qi}} function in the \code{\link[tidybayes:tidybayes-package]{tidybayes}} package.
       }
  \item if \code{return == 'draws'}, a set of columns: \code{.value}, \code{.chain}, \code{.iteration}, and \code{.draw} describing the predicted quantities for each draw, chain and iteration. This data structure mimics the \code{\link[posterior:draws_df]{draws_df}} format from the \code{\link[posterior:posterior-package]{posterior}} package.
}
}

\examples{
\dontrun{
library(tidybayes)
library(tidyverse)

login()

# ---- Re-compute SLD_hat using overall parameter estimates ----
d <- fetch_biomarker_params(run_id, level = 'overall')

# compute log-sld-hat overall from parameters:
stein_fojo <- function(bas_sld, f, kg, ks, t) {
  sld_hat <- dplyr::case_when(t < 0 ~ bas_sld * exp(kg * t),
                              t == 0 ~ bas_sld,
                              t > 0 ~ bas_sld * ((1-f) * exp(kg * t) + f * exp(-1*ks * t)))
                              }

d \%>\%
  spread(.variable, .value) \%>\%
  select(f, kg, ks) \%>\%
  expand_grid(t = seq(from = -10, to = 500, by = 10)) \%>\%
  dplyr::mutate(sld_hat = stein_fojo(f = f, kg = kg, ks = ks, t = t, bas_sld = 1))

# ---- summarize sampling quality for trial-arm-level parameters ----

library(posterior)
d <- fetch_biomarker_params(run_id, level = 'trial_arm', return = 'draws')

d \%>\% spread(.variable, .value) \%>\%
   group_by(.level, trial_arm_id, .type, run_id) \%>\%
   group_modify(~ summarise_draws(.x))
}

}
