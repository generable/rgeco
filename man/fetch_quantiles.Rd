% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inference_draws.R
\name{fetch_quantiles}
\alias{fetch_quantiles}
\title{Fetch quantiles from the Generable API for a run}
\usage{
fetch_quantiles(
  parameter,
  run_id,
  project = NULL,
  project_version_id = NULL,
  type = c("posterior", "prior")
)
}
\arguments{
\item{parameter}{Name of the parameter or predictive quantity
See \code{\link{list_parameter_names}} and \code{\link{list_predictive_names}}.}

\item{run_id}{Run id; required.}

\item{project}{Project name}

\item{project_version_id}{Project version. If this is specified, the `project` argument is ignored.}

\item{type}{Type of quantile to return, either posterior or prior. Default is `posterior`. To access
prior quantiles, set this to `prior`.}
}
\value{
`data.frame` of quantiles in long format with `quantile`, `.variable`, and `.value` columns
        for the 0.05, 0.10, 0.25, 0.50, 0.75, 0.90, and 0.95 quantile probabilities.
}
\description{
Fetch quantiles of the specified parameter or predictive quantity from the Generable API
for a model run
}
\details{
This function retrieves the quantiles from the Generable API for a model run. The user specifies
the parameter or predictive quantity to query. A data.frame in long format is returned with
`quantile`, `.variable`, `run_id`, and `.value` columns, along with the dimensions over which the
parameter is estimated such as `subject`, `survival_time`, or `study`.

Note: the quantile probabilites are set to 0.05, 0.10, 0.25, 0.50, 0.75, 0.90, and 0.95. Other quantile
probabilities can be computed directly from the draws, if necessary.

The parameters or predictive quantities for a particular model run can be found by calling
\code{\link{list_parameter_names}} or \code{\link{list_predictive_names}}.

Posterior quantiles are returned by default. The prior quantiles can be accessed by setting
the `type` argument to `prior`.

Authentication (see \code{\link{login}}) is required prior to using this function
and this pulls the quantiles from the Generable API.

A project can be specified by using the project name or a specific project version.
If a project is specified using the name, data is fetched for the latest version of the project.
If a project is specified using the project version, the project name is ignored if it
is also included as an argument.

Both the parameter & run_id arguments are vectorized. In the case of multiple values,
the rows returned for each run and/or parameter are concatenated into a single data.frame. This is
intended for use where the runs use the same model, and parameters are similar dimension.
}
\seealso{
\code{\link{list_parameter_names}}, \code{\link{list_predictive_names}}, \code{\link{fetch_draws}}
}
